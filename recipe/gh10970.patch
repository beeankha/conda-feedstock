From bc22d85c909eee410f01dc2456a511c379ee2391 Mon Sep 17 00:00:00 2001
From: Isuru Fernando <isuruf@gmail.com>
Date: Mon, 11 Oct 2021 11:43:59 -0700
Subject: [PATCH] support python 3.10 (#10970)

* support python 3.10

* use a raw string for regex

* remove unused import

* Fix condition

* One or more digits

Co-authored-by: Chris Burr <chrisburr@users.noreply.github.com>

* use double quotes and better variable names

Co-authored-by: Chris Burr <chrisburr@users.noreply.github.com>
---
 conda/common/path.py      | 33 ++++++++++++++++++++++++++++-----
 tests/common/test_path.py | 12 ++++++++++++
 2 files changed, 40 insertions(+), 5 deletions(-)

diff --git a/conda/common/path.py b/conda/common/path.py
index 18e4b27674..42857a598e 100644
--- a/conda/common/path.py
+++ b/conda/common/path.py
@@ -13,7 +13,7 @@
 from .compat import on_win, string_types
 from .. import CondaError
 from .._vendor.auxlib.decorators import memoize
-from .._vendor.toolz import accumulate, concat, take
+from .._vendor.toolz import accumulate, concat
 from distutils.spawn import find_executable
 
 try:
@@ -178,6 +178,8 @@ def get_python_site_packages_short_path(python_version):
         return 'lib/python%s/site-packages' % py_ver
 
 
+_VERSION_REGEX = re.compile(r"[0-9]+\.[0-9]+")
+
 def get_major_minor_version(string, with_dot=True):
     # returns None if not found, otherwise two digits as a string
     # should work for
@@ -187,10 +189,31 @@ def get_major_minor_version(string, with_dot=True):
     #   - lib/python34/site-packages/
     # the last two are dangers because windows doesn't have version information there
     assert isinstance(string, string_types)
-    digits = tuple(take(2, (c for c in string if c.isdigit())))
-    if len(digits) == 2:
-        return '.'.join(digits) if with_dot else ''.join(digits)
-    return None
+    if string.startswith("lib/python"):
+        pythonstr = string.split("/")[1]
+        start = len("python")
+        if len(pythonstr) < start + 2:
+            return None
+        maj_min = pythonstr[start], pythonstr[start+1:]
+    elif string.startswith("bin/python"):
+        pythonstr = string.split("/")[1]
+        start = len("python")
+        if len(pythonstr) < start + 3:
+            return None
+        assert pythonstr[start+1] == "."
+        maj_min = pythonstr[start], pythonstr[start+2:]
+    else:
+        match = _VERSION_REGEX.match(string)
+        if match:
+            version = match.group(0).split(".")
+            maj_min = version[0], version[1]
+        else:
+            digits = "".join([c for c in string if c.isdigit()])
+            if len(digits) < 2:
+                return None
+            maj_min = digits[0], digits[1:]
+
+    return ".".join(maj_min) if with_dot else "".join(maj_min)
 
 
 def get_bin_directory_short_path():
diff --git a/tests/common/test_path.py b/tests/common/test_path.py
index e23f2817bb..0c350cc7b9 100644
--- a/tests/common/test_path.py
+++ b/tests/common/test_path.py
@@ -118,8 +118,20 @@ def test_get_major_minor_version_no_dot():
     assert get_major_minor_version("lib/python34/site-packages/") == "3.4"
     assert get_major_minor_version("python3") is None
 
+    assert get_major_minor_version("3.10.0") == "3.10"
+    assert get_major_minor_version("310") == "3.10"
+    assert get_major_minor_version("bin/python3.10") == "3.10"
+    assert get_major_minor_version("lib/python310/site-packages/") == "3.10"
+    assert get_major_minor_version("python3") is None
+
     assert get_major_minor_version("3.5.2", False) == "35"
     assert get_major_minor_version("27", False) == "27"
     assert get_major_minor_version("bin/python2.7", False) == "27"
     assert get_major_minor_version("lib/python34/site-packages/", False) == "34"
     assert get_major_minor_version("python3", False) is None
+
+    assert get_major_minor_version("3.10.0", False) == "310"
+    assert get_major_minor_version("310", False) == "310"
+    assert get_major_minor_version("bin/python3.10", False) == "310"
+    assert get_major_minor_version("lib/python310/site-packages/", False) == "310"
+    assert get_major_minor_version("python3", False) is None
